// Mocks generated by Mockito 5.4.4 from annotations
// in todo_app/test/data/todo_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:connectivity_plus/connectivity_plus.dart' as _i8;
import 'package:mockito/mockito.dart' as _i1;
import 'package:todo_app/core/utils/internet_connection_checker.dart' as _i7;
import 'package:todo_app/data/datasources/local/local_data_source.dart' as _i6;
import 'package:todo_app/data/datasources/remote/remote_data_source.dart'
    as _i3;
import 'package:todo_app/domain/entities/firebase_response.dart' as _i2;
import 'package:todo_app/domain/entities/task.dart' as _i5;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeResponse_0<T> extends _i1.SmartFake implements _i2.Response<T> {
  _FakeResponse_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RemoteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockRemoteDataSource extends _i1.Mock implements _i3.RemoteDataSource {
  MockRemoteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Response<List<_i5.Task>>> getTasks() => (super.noSuchMethod(
        Invocation.method(
          #getTasks,
          [],
        ),
        returnValue: _i4.Future<_i2.Response<List<_i5.Task>>>.value(
            _FakeResponse_0<List<_i5.Task>>(
          this,
          Invocation.method(
            #getTasks,
            [],
          ),
        )),
      ) as _i4.Future<_i2.Response<List<_i5.Task>>>);

  @override
  _i4.Future<_i2.Response<_i5.Task>> addTask(_i5.Task? task) =>
      (super.noSuchMethod(
        Invocation.method(
          #addTask,
          [task],
        ),
        returnValue:
            _i4.Future<_i2.Response<_i5.Task>>.value(_FakeResponse_0<_i5.Task>(
          this,
          Invocation.method(
            #addTask,
            [task],
          ),
        )),
      ) as _i4.Future<_i2.Response<_i5.Task>>);

  @override
  _i4.Future<_i2.Response<_i5.Task>> updateTask(
    String? id,
    _i5.Task? task,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateTask,
          [
            id,
            task,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Response<_i5.Task>>.value(_FakeResponse_0<_i5.Task>(
          this,
          Invocation.method(
            #updateTask,
            [
              id,
              task,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Response<_i5.Task>>);

  @override
  _i4.Future<_i2.Response<String>> updateIsCompleted(
    String? id,
    bool? isCompleted,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateIsCompleted,
          [
            id,
            isCompleted,
          ],
        ),
        returnValue:
            _i4.Future<_i2.Response<String>>.value(_FakeResponse_0<String>(
          this,
          Invocation.method(
            #updateIsCompleted,
            [
              id,
              isCompleted,
            ],
          ),
        )),
      ) as _i4.Future<_i2.Response<String>>);

  @override
  _i4.Future<_i2.Response<String>> deleteTask(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #deleteTask,
          [id],
        ),
        returnValue:
            _i4.Future<_i2.Response<String>>.value(_FakeResponse_0<String>(
          this,
          Invocation.method(
            #deleteTask,
            [id],
          ),
        )),
      ) as _i4.Future<_i2.Response<String>>);
}

/// A class which mocks [LocalDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockLocalDataSource extends _i1.Mock implements _i6.LocalDataSource {
  MockLocalDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<List<_i5.Task>?> getTasks() => (super.noSuchMethod(
        Invocation.method(
          #getTasks,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Task>?>.value(),
      ) as _i4.Future<List<_i5.Task>?>);

  @override
  _i4.Future<_i5.Task?> addTask(_i5.Task? task) => (super.noSuchMethod(
        Invocation.method(
          #addTask,
          [task],
        ),
        returnValue: _i4.Future<_i5.Task?>.value(),
      ) as _i4.Future<_i5.Task?>);

  @override
  _i4.Future<_i5.Task?> updateTask(_i5.Task? task) => (super.noSuchMethod(
        Invocation.method(
          #updateTask,
          [task],
        ),
        returnValue: _i4.Future<_i5.Task?>.value(),
      ) as _i4.Future<_i5.Task?>);

  @override
  _i4.Future<String?> deleteTask(String? id) => (super.noSuchMethod(
        Invocation.method(
          #deleteTask,
          [id],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);

  @override
  _i4.Future<void> clearLatestData() => (super.noSuchMethod(
        Invocation.method(
          #clearLatestData,
          [],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<void> saveTasks(List<_i5.Task>? tasks) => (super.noSuchMethod(
        Invocation.method(
          #saveTasks,
          [tasks],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);

  @override
  _i4.Future<int> getLastDataUpdateTime() => (super.noSuchMethod(
        Invocation.method(
          #getLastDataUpdateTime,
          [],
        ),
        returnValue: _i4.Future<int>.value(0),
      ) as _i4.Future<int>);

  @override
  _i4.Future<List<_i5.Task>?> getUnsynchedTasks() => (super.noSuchMethod(
        Invocation.method(
          #getUnsynchedTasks,
          [],
        ),
        returnValue: _i4.Future<List<_i5.Task>?>.value(),
      ) as _i4.Future<List<_i5.Task>?>);

  @override
  _i4.Future<String?> updateIsCompleted(
    String? id,
    bool? isCompleted,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateIsCompleted,
          [
            id,
            isCompleted,
          ],
        ),
        returnValue: _i4.Future<String?>.value(),
      ) as _i4.Future<String?>);
}

/// A class which mocks [InternetConnectionChecker].
///
/// See the documentation for Mockito's code generation for more information.
class MockInternetConnectionChecker extends _i1.Mock
    implements _i7.InternetConnectionChecker {
  MockInternetConnectionChecker() {
    _i1.throwOnMissingStub(this);
  }

  @override
  void startListening(
          dynamic Function(_i8.ConnectivityResult)? onConnectivityChanged) =>
      super.noSuchMethod(
        Invocation.method(
          #startListening,
          [onConnectivityChanged],
        ),
        returnValueForMissingStub: null,
      );

  @override
  void stopListening() => super.noSuchMethod(
        Invocation.method(
          #stopListening,
          [],
        ),
        returnValueForMissingStub: null,
      );

  @override
  _i4.Future<bool> isConnected() => (super.noSuchMethod(
        Invocation.method(
          #isConnected,
          [],
        ),
        returnValue: _i4.Future<bool>.value(false),
      ) as _i4.Future<bool>);
}
